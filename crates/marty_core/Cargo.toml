[package]
name = "marty_core"
description = "MartyPC's core emulation library. Contains all emulation logic independent of frontend or platform."
version.workspace = true
edition.workspace = true
license.workspace = true

[lib]
name = "marty_core"
path = "src/lib.rs"
crate-type = ["cdylib", "lib"]

[dependencies]
marty_common = { path = "../marty_common" }

arraydeque = "0.5"
bytemuck = "1.19"
const_format = "0.2"
lazy_static = "1.5"
log = "0.4"
md5 = "0.7"
modular-bitfield = "0.11"
rand = "0.8.5"
regex = "1.0"
ringbuf = "0.2.8"
serde = { version = "1.0.107", features = ["derive"] }
serde_derive = "1.0.107"
serde_with = "2.1.0"
strum = "0.26"
strum_macros = "0.26"
toml = "0.5.10"
uuid = { version = "1.1.2", features = ["v4"] }
anyhow.workspace = true
serialport = { workspace = true, optional = true }
#rodio.workspace = true
fxhash.workspace = true
enum_dispatch.workspace = true
crossbeam-channel.workspace = true
web-time.workspace = true
cfg-if.workspace = true
binrw.workspace = true

[dependencies.opl3-rs]
git = "https://github.com/dbalsom/opl3-rs.git"
branch = "main"
optional = true

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
fluxfox = { workspace = true, default-features=false, features = ["core", "archives", "mfi", "fat", "flux", "ibm_pc"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom = { version = "0.2", features = ["js"] }
wasm-bindgen = { version = "0.2", optional = true }
wasm-bindgen-futures = { version = "0.4", optional = true }
fluxfox = { workspace = true, default-features=false, features = ["core", "wasm", "zip", "gzip", "tar", "mfi", "fat", "flux", "ibm_pc"] }

[dev-dependencies]
criterion = "0.5"

[[bench]]
name = "cga_bench"
harness = false

[[bench]]
name = "cpu_bench"
harness = false

[features]
default = ["ega", "vga"]
devmode = ["cpu_cycle_trace", "cpu_trace_comments"]
sound = []
serial = ["serialport"]
opl = ["dep:opl3-rs"]
wasm = []
arduino_validator = []
cpu_validator = []
cpu_cycle_trace = []
cpu_trace_comments = []
ega = []
vga = []